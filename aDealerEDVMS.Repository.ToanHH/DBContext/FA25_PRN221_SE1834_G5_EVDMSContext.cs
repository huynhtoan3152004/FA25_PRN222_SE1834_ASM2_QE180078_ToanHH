// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using aDealerEDVMS.Repository.ToanHH.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;

namespace aDealerEDVMS.Repository.ToanHH.DBcontext;
//vì đổi namespace nên enity cũng phải đổi theo

public partial class FA25_PRN221_SE1834_G5_EVDMSContext : DbContext
{
    public FA25_PRN221_SE1834_G5_EVDMSContext()
    {
    }

    public FA25_PRN221_SE1834_G5_EVDMSContext(DbContextOptions<FA25_PRN221_SE1834_G5_EVDMSContext> options)
        : base(options)
    {
    }

    public virtual DbSet<DealerContractsHht> DealerContractsHhts { get; set; }

    public virtual DbSet<DealersHht> DealersHhts { get; set; }

    public virtual DbSet<SystemUserAccount> SystemUserAccounts { get; set; }

    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-NR1QK4K;Initial Catalog=FA25_PRN221_SE1834_G5_EVDMS;Integrated Security=True;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<DealerContractsHht>(entity =>
        {
            entity.HasKey(e => e.ContractId).HasName("PK__DealerCo__F8D6642312FDF878");

            entity.ToTable("DealerContracts_HHT");

            entity.Property(e => e.ContractId).HasColumnName("contract_id");
            entity.Property(e => e.ContractValue)
                .HasColumnType("decimal(12, 2)")
                .HasColumnName("contract_value");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("created_at");
            entity.Property(e => e.DealerId).HasColumnName("dealer_id");
            entity.Property(e => e.EndDate).HasColumnName("end_date");
            entity.Property(e => e.StartDate).HasColumnName("start_date");
            entity.Property(e => e.Status)
                .HasMaxLength(20)
                .HasColumnName("status");

            entity.HasOne(d => d.Dealer).WithMany(p => p.DealerContractsHhts)
                .HasForeignKey(d => d.DealerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DealerCon__deale__3F466844");
        });

        modelBuilder.Entity<DealersHht>(entity =>
        {
            entity.HasKey(e => e.DealerId).HasName("PK__Dealers___019990C0D83E4E31");

            entity.ToTable("Dealers_HHT");

            entity.HasIndex(e => e.DealerCode, "UQ__Dealers___9BF9673DA1C3C63C").IsUnique();

            entity.Property(e => e.DealerId).HasColumnName("dealer_id");
            entity.Property(e => e.Address).HasColumnName("address");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.DealerCode)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("dealer_code");
            entity.Property(e => e.DealerName)
                .IsRequired()
                .HasMaxLength(200)
                .HasColumnName("dealer_name");
            entity.Property(e => e.Email)
                .HasMaxLength(150)
                .HasColumnName("email");
            entity.Property(e => e.EstablishedDate).HasColumnName("established_date");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasColumnName("is_active");
            entity.Property(e => e.LastAudit)
                .HasColumnType("datetime")
                .HasColumnName("last_audit");
            entity.Property(e => e.Phone)
                .HasMaxLength(20)
                .HasColumnName("phone");
            entity.Property(e => e.Rating)
                .HasColumnType("decimal(3, 2)")
                .HasColumnName("rating");
            entity.Property(e => e.TotalStaff)
                .HasDefaultValue(0)
                .HasColumnName("total_staff");
        });

        modelBuilder.Entity<SystemUserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId);

            entity.ToTable("System.UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(50);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RequestCode).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}